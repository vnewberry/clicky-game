{"version":3,"sources":["components/Card/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["Card","props","className","alt","name","src","image","id","onClick","shuffleScoreCard","Wrapper","children","Header","total","status","App","state","characters","clickedCharacters","score","goal","includes","setState","push","length","console","log","i","j","Math","floor","random","this","map","character","key","Component","ReactDOM","render","document","getElementById"],"mappings":"mzEAUeA,G,MAPF,SAAAC,GAAK,OACd,yBAAKC,UAAU,4BACX,yBAAKC,IAAKF,EAAMG,KAAMC,IAAKJ,EAAMK,MAAOC,GAAIN,EAAMM,GAChDC,QAAS,kBAAMP,EAAMQ,iBAAiBR,EAAMM,KAAKL,UAAU,oBCAtDQ,G,MAFC,SAAAT,GAAK,OAAI,yBAAKC,UAAU,WAAWD,EAAMU,YCS1CC,G,MATA,SAAAX,GAAK,OAEhB,yBAAKC,UAAU,aACX,wDACF,wBAAIA,UAAU,SAAd,eAAmCD,EAAMY,OACzC,wBAAIX,UAAU,UAAUD,EAAMa,W,OCyDrBC,G,kNA1DbC,MAAQ,CACNC,aACAC,kBAAmB,GACnBC,MAAO,EACPC,KAAM,GACNN,OAAQ,I,EAIVL,iBAAmB,SAAAF,GACjB,IAAIW,EAAoB,EAAKF,MAAME,kBAEnC,GAAGA,EAAkBG,SAASd,GAC5B,EAAKe,SAAS,CAAEJ,kBAAmB,GAAIC,MAAO,EAAGL,OAAS,wCAD5D,CAME,GAFAI,EAAkBK,KAAKhB,GAES,KAA7BW,EAAkBM,OAGnB,OAFA,EAAKF,SAAS,CAACH,MAAO,GAAIL,OAAQ,gCAAiCI,kBAAmB,UACtFO,QAAQC,IAAI,WAId,EAAKJ,SAAS,CAAEL,aAAYC,oBAAmBC,MAAOD,EAAkBM,OAAQV,OAAQ,MAExF,IAAK,IAAIa,EAAIV,EAAWO,OAAS,EAAGG,EAAI,EAAGA,IAAK,CAC9C,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADM,EAEb,CAACV,EAAWW,GAAIX,EAAWU,IAA3DV,EAAWU,GAFkC,KAE9BV,EAAWW,GAFmB,Q,uDAQ1C,IAAD,OACP,OACE,yBAAK1B,UAAU,OAEb,kBAAC,EAAD,CAAQW,MAAOmB,KAAKhB,MAAMG,MACnBC,KAAM,GACNN,OAAQkB,KAAKhB,MAAMF,SAE1B,kBAAC,EAAD,KACGkB,KAAKhB,MAAMC,WAAWgB,KAAI,SAAAC,GAAS,OAClC,kBAAC,EAAD,CACEzB,iBAAkB,EAAKA,iBACvBF,GAAI2B,EAAU3B,GACd4B,IAAKD,EAAU3B,GACfD,MAAO4B,EAAU5B,iB,GAjDb8B,cCDlBC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.839fefb5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Card = props => (\r\n    <div className=\"card img-container hover\">\r\n        <img alt={props.name} src={props.image} id={props.id}\r\n          onClick={() => props.shuffleScoreCard(props.id)} className='shuffleScore'/>\r\n    </div>\r\n  );\r\n\r\nexport default Card;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n\r\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\r\n\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\n//stateless component\r\nconst Header = props => (\r\n    \r\n    <div className=\"gameScore\">\r\n        <h1>The Simpsons Clicky Game</h1>\r\n      <h3 className=\"score\">Your Score: {props.total}</h3>\r\n      <h3 className=\"status\">{props.status}</h3>\r\n    </div>\r\n  );\r\n\r\nexport default Header;","import React, { Component } from \"react\";\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    characters,\n    clickedCharacters: [],\n    score: 0,\n    goal: 12,\n    status: \"\"\n  };\n\n\n  shuffleScoreCard = id => {\n    let clickedCharacters = this.state.clickedCharacters;\n\n    if(clickedCharacters.includes(id)){\n      this.setState({ clickedCharacters: [], score: 0, status:  \"Game Over! Click to play again!\" });\n      return;\n    }else{\n      clickedCharacters.push(id)\n\n      if(clickedCharacters.length === 12){\n        this.setState({score: 12, status: \"You Won! Click to play again!\", clickedCharacters: []});\n        console.log('You Win');\n        return;\n      }\n\n      this.setState({ characters, clickedCharacters, score: clickedCharacters.length, status: \" \" });\n\n      for (let i = characters.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1));\n        [characters[i], characters[j]] = [characters[j], characters[i]];\n      }\n    }\n  }\n\n \n  render() {\n    return (\n      <div className=\"App\">\n     \n        <Header total={this.state.score}\n               goal={12}\n               status={this.state.status}\n               />\n        <Wrapper>\n          {this.state.characters.map(character => (\n            <Card\n              shuffleScoreCard={this.shuffleScoreCard}\n              id={character.id}\n              key={character.id}\n              image={character.image}\n            />\n          ))}\n        </Wrapper>\n        </div>\n    \n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}